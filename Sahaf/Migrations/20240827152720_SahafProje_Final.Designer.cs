// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sahaf.Data;

#nullable disable

namespace Sahaf.Migrations
{
    [DbContext(typeof(SahafDbContext))]
    [Migration("20240827152720_SahafProje_Final")]
    partial class SahafProje_Final
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KitapYazar", b =>
                {
                    b.Property<int>("KitapId")
                        .HasColumnType("int");

                    b.Property<int>("YazarId")
                        .HasColumnType("int");

                    b.HasKey("KitapId", "YazarId");

                    b.HasIndex("YazarId");

                    b.ToTable("KitapYazar");
                });

            modelBuilder.Entity("Sahaf.Models.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kategoriler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KategoriAdi = "Edebiyat"
                        },
                        new
                        {
                            Id = 2,
                            KategoriAdi = "Roman"
                        },
                        new
                        {
                            Id = 3,
                            KategoriAdi = "Kişisel Gelişim"
                        },
                        new
                        {
                            Id = 4,
                            KategoriAdi = "Çocuk ve Gelişim"
                        },
                        new
                        {
                            Id = 5,
                            KategoriAdi = "Arastırma - Tarih"
                        },
                        new
                        {
                            Id = 6,
                            KategoriAdi = "Yabanci Dilde Kitaplar"
                        },
                        new
                        {
                            Id = 7,
                            KategoriAdi = "Çizgi Roman"
                        },
                        new
                        {
                            Id = 8,
                            KategoriAdi = "Felsefe Kitapları"
                        });
                });

            modelBuilder.Entity("Sahaf.Models.Kitap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BasimYili")
                        .HasColumnType("int");

                    b.Property<int>("BaskiSayisi")
                        .HasColumnType("int");

                    b.Property<double>("Fiyat")
                        .HasColumnType("float");

                    b.Property<string>("KapakYazisi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<string>("KitapAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("YayineviId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("YayineviId");

                    b.ToTable("Kitaplar");
                });

            modelBuilder.Entity("Sahaf.Models.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kullanicilar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Sebahattin",
                            KullaniciAdi = "admin",
                            Parola = "81dc9bdb52d04dc20036dbd8313ed055",
                            Soyad = "Abanaz"
                        });
                });

            modelBuilder.Entity("Sahaf.Models.Yayinevi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("YayineviAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Yayinevleri");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            YayineviAdi = "İş Bankası Kültür Yayınları"
                        },
                        new
                        {
                            Id = 2,
                            YayineviAdi = "Koridor Yayıncılık"
                        },
                        new
                        {
                            Id = 3,
                            YayineviAdi = "Diyojen Yayıncılık"
                        },
                        new
                        {
                            Id = 4,
                            YayineviAdi = "Butik"
                        },
                        new
                        {
                            Id = 5,
                            YayineviAdi = "Taze Kitap"
                        },
                        new
                        {
                            Id = 6,
                            YayineviAdi = "Timaş Çocuk"
                        },
                        new
                        {
                            Id = 7,
                            YayineviAdi = "Everest Yayınları"
                        },
                        new
                        {
                            Id = 8,
                            YayineviAdi = "Alfa Yayıncılık"
                        },
                        new
                        {
                            Id = 9,
                            YayineviAdi = "Yapı Kredi Yayınları"
                        },
                        new
                        {
                            Id = 10,
                            YayineviAdi = "Doğan Kitap"
                        },
                        new
                        {
                            Id = 11,
                            YayineviAdi = "Enkitap"
                        },
                        new
                        {
                            Id = 12,
                            YayineviAdi = "Gece Kitaplığı"
                        },
                        new
                        {
                            Id = 13,
                            YayineviAdi = "Fihrist"
                        },
                        new
                        {
                            Id = 14,
                            YayineviAdi = "Eksik Parça Yayınları"
                        },
                        new
                        {
                            Id = 15,
                            YayineviAdi = "Doğan Kitap"
                        });
                });

            modelBuilder.Entity("Sahaf.Models.Yazar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("YazarAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Yazarlar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            YazarAdi = "Adolf Hitler"
                        },
                        new
                        {
                            Id = 2,
                            YazarAdi = "Mustafa Kemal Atatürk"
                        },
                        new
                        {
                            Id = 3,
                            YazarAdi = "Aristoteles"
                        },
                        new
                        {
                            Id = 4,
                            YazarAdi = "John D. Rockefeller"
                        },
                        new
                        {
                            Id = 5,
                            YazarAdi = "Ales Kot"
                        },
                        new
                        {
                            Id = 6,
                            YazarAdi = "Orhan Kemal"
                        },
                        new
                        {
                            Id = 7,
                            YazarAdi = "Ali Kılıç"
                        },
                        new
                        {
                            Id = 8,
                            YazarAdi = "Jack London"
                        },
                        new
                        {
                            Id = 9,
                            YazarAdi = "Sebahattin Ali"
                        },
                        new
                        {
                            Id = 10,
                            YazarAdi = "Fyodor Mihaylovic Dostoyevsiki"
                        },
                        new
                        {
                            Id = 11,
                            YazarAdi = "Şermin Yaşar"
                        },
                        new
                        {
                            Id = 12,
                            YazarAdi = "William Golding"
                        },
                        new
                        {
                            Id = 13,
                            YazarAdi = "Piere Franckh"
                        },
                        new
                        {
                            Id = 14,
                            YazarAdi = "James Allen"
                        },
                        new
                        {
                            Id = 15,
                            YazarAdi = "Henry Cloud"
                        },
                        new
                        {
                            Id = 16,
                            YazarAdi = "Caroline Myss"
                        },
                        new
                        {
                            Id = 17,
                            YazarAdi = "Şermin Yaşar"
                        },
                        new
                        {
                            Id = 18,
                            YazarAdi = "Mert Arık"
                        },
                        new
                        {
                            Id = 19,
                            YazarAdi = "Duncan Beedie"
                        });
                });

            modelBuilder.Entity("KitapYazar", b =>
                {
                    b.HasOne("Sahaf.Models.Kitap", null)
                        .WithMany()
                        .HasForeignKey("KitapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sahaf.Models.Yazar", null)
                        .WithMany()
                        .HasForeignKey("YazarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sahaf.Models.Kitap", b =>
                {
                    b.HasOne("Sahaf.Models.Kategori", "Kategori")
                        .WithMany("Kitaplar")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sahaf.Models.Kullanici", "Kullanici")
                        .WithMany("Kitaplar")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sahaf.Models.Yayinevi", "Yayinevi")
                        .WithMany("Kitaplar")
                        .HasForeignKey("YayineviId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");

                    b.Navigation("Kullanici");

                    b.Navigation("Yayinevi");
                });

            modelBuilder.Entity("Sahaf.Models.Kategori", b =>
                {
                    b.Navigation("Kitaplar");
                });

            modelBuilder.Entity("Sahaf.Models.Kullanici", b =>
                {
                    b.Navigation("Kitaplar");
                });

            modelBuilder.Entity("Sahaf.Models.Yayinevi", b =>
                {
                    b.Navigation("Kitaplar");
                });
#pragma warning restore 612, 618
        }
    }
}
